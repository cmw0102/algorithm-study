# 1934_최소공배수

# 문제 분석
# 두 자연수가 주어졌을 때, 최소공배수 구하기

# 해결 과정
# 첫 번째
# 구글링의 힘을 빌렸다...
# 소인수분해를 하는 과정을 하지 않고 다른 방법은 없을까 하면서 구글링을 하였고,
# 유클리드 호제법을 통해 구한 최대공약수를 이용하여 최소공배수를 구한다.

import sys
input = sys.stdin.readline

T = int(input())
for i in range(T):
    A, B = map(int, input().split())
    AA, BB = A, B  # AA, BB -> 두 자연수의 곱

    while A % B != 0:  # 유클리드 호제법을 이용하여 최대 공약수 구하기
        A, B = B, A % B  # 큰 수를 작은 수로 나눈 나머지를 구한 다음, 나눴던 수와 나머지로 또 나머지 연산을 한다.
        # 나머지가 0이 되었을 때, 마지막 계산에서 나누는 수로 사용된 수가 최대공약수가 된다.
    print(AA * BB // B)  # AA * BB(두 자연수의 곱) // B(최대공약수) = 최소공배수
# 결론
# 수학과 관련된 개념에 약한 것 같다.
# 알고리즘을 풀면서 필요한 개념을 공부해야겠다.
# key point: (두 자연수의 곱 = 최대공약수 X 최소공배수)

# ++ 추가 공부
# 파이썬_추가공부_개념정리에 유클리드 호제법과 최대공약수를 이용하여 최소공배수를 구하는 방법 정리할 예정.
# 공부한 블로그
# 유클리드 호제법: https://velog.io/@yerin4847/W1-%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95
# 최대공약수를 이용하여 최소공배수 구하기: https://math100.tistory.com/141
