# 2839_설탕-배달

# 문제 분석
# 상근이는 사탕가게에 설탕 Nkg을 배달해야 함.
# 봉지 종류 -> 3kg, 5kg
# ex) 18kg 설탕 배달 시 3kg 봉지 6개도 가능하지만 5kg 3개, 3kg 1개 => 4개로 더 적게 배달 가능
# 구해야 하는 것: Nkg 배달 시 정확, 최소를 가지는 봉지의 수 구하기

# 해결 과정
# 첫 번째
# 본인은 문제를 보고 5kg, 3kg으로 딱 나누어 떨어질 때 경우의 수를 먼저 구한 다음
# 두 종류의 봉지 모두 혼합해서 사용해야 하는 경우 몫, 나머지의 계산값이 0인 정확한 값과 최솟값의 교차지점의 result값을 구하고자 했다.
# (문제에서는 딱히 소수점에 대해 설며을 안했으므로 N은 정수형으로 취급한다.)

import sys
input = sys.stdin.readline
N = int(input())

result = 1000000

if N % 5 == 0:
    result = N // 5

if N % 3 == 0:
    result = N // 3

for i in range(1, (N // 5) + 1):
    if (N - (i * 5)) % 3 == 0 and result > i + ((N - (i * 5)) // 3):
        result = i + ((N - (i * 5)) // 3)

if result == 1000000:
    print(-1)
else:
    print(result)

# 결론
# 생각보다 많이 흔들렸고 고민을 많이 한 문제였다.
# 한 번에 성공하지 못하였고 5번의 시도 끝에 성공했다.
# 틀릴때마다 왜 틀렸는지 원인을 찾아보면 계속 한 가지 경우의 수를 놓쳤다.
# 브루트포스의 특성상 모든 경우의 수를 찾아야 하는데 이러한 실수가 반복되면 다른 문제를 풀 때 심각한 문제가 발생할 확률이 높기 때문에
# 처음부터 꼼꼼하게 풀어야 겠다는 생각이 들었다.

# ++ 다른 해결 방법
# 본인이 작성한 위 코드를 어떻게 하면 더 깔끔하게 작성 할 수 있을지 궁금해서 찾아보고 CHAT GPT에도 물어본 결과
# i의 값을 1부터 시작이 아닌 0부터 시작하게 만들어
# 3으로 정확하게 나누어지는 N의 경우의 수를 간결하게 작성한 코드가 있었다.
# 당장 변화되기는 어렵지만 노력하여 아래의 코드처럼 간결하게 짤 수 있도록 노력할것이다.

input = sys.stdin.readline
N = int(input())

result = 1000000

# 먼저 N이 5로 나누어떨어지는 경우를 처리
if N % 5 == 0:
    print(N // 5)
else:
    # 5kg 봉지 개수(i)를 0부터 시작
    for i in range((N // 5) + 1):
        # 나머지가 3으로 나누어떨어지면 최적의 결과를 갱신
        if (N - (i * 5)) % 3 == 0:
            result = min(result, i + (N - (i * 5)) // 3)

    # 결과 출력
    if result == 1000000:
        print(-1)
    else:
        print(result)
