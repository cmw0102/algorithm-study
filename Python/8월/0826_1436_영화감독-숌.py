# 1436_영화감독-숌

# 문제 분석
# 종말의 수: 6이 적어도 3개 이상 들어가는 수
# -> 666(최소값)[N:1] 1666[N:2] 2666[N:3] 3666[N:4] ... 순으로 되어있음
# N은 10,000 보다 작거나 같은 자연수

# 해결 과정
# 첫 번째 - 보류 했음
# 666 1666 ... 이렇게 진행 되다가 6660 6666 과 같이 기본적인 틀을 깨는 변수가 발생하는데 이 부분의 경우의 수를 구해야 전체 경우의 수를 구할 수 있다고 생각했다.
# 근데 너무 터무니 없이 많은 경우의 수를 생각해 내야 하는데 규칙을 찾는데 시간을 많이 할애할 것 같다는 생각이 들었고 새로운 방법을 찾아야 했다.

# 두 번째 - 성공
# 매우 큰 수를 사용하여 for문으로 666부터 시작하는 랜덤수를 생성하고
# if ~ in을 통해 최소 "666" 이상을 가지는 숫자를 판별한 후 총 만개를 리스트에 추가하는 방법을 생각했다.
# 초반엔 6이 4개이상 있는 숫자는 어떻게 하지 생각했지만 계속 고민해본 결과 어차피 666만 연속으로 존재하면 오름차순으로 알아서 정렬되어
# 리스트에 차곡차곡 쌓일 것이라는 확신이 생겼고 아래 코드와 같이 진행시켰다.

import sys
input = sys.stdin.readline
N = int(input())
N_LIST = []
K = 0

for i in range(666, 10**100):
    if "666" in str(i):
        N_LIST.append(i)
        K += 1
    if K == 10000:
        break

print(N_LIST[N-1])

# 결론
# 두 번째 해결과정처럼 이 문제의 KEY POINT는 결국 "666" 이라는 숫자(문자열)이 포함된 수의 오름차순 정렬을 통한
# N번째 666이 소속된 수를 구하는 문제였다.
# 처음에는 어떻게 풀어야 할 지 막막했지만 문제에 대한 생각과 고민을 계속 하였고
# 코드를 간결하고 최소화(?)하여 작성해보자 하는 방향이 있었고 그렇게 된 것 같아서 뿌듯했다.


# ++ 다른 해결 방법
# 출처: https://real-myeong.tistory.com/51

n = int(input())
num = 666
cnt = 0
while True:
    if '666' in str(num):
        cnt += 1
    if cnt == n:
        print(num)
        break
    num += 1

# 나는 리스트를 만들어서 만개 전부를 추가한 후 사용자가 N을 입력시 그에 맞는 N번째 666을 출력하게 만들었지만
# 구글링을 했을 때 이 블로그 외에 여러 블로그에서는 while문을 이용하여 사용자가 입력한 N과
# 666이 들어가 있는지 확인한 후 카운트를 한 cnt가 동일할 경우 현재 num값을 출력하는 아주 간단하고 더 효율적인 방식으로 구현하고 있었다.
# 물론 내가 푼 방법이 잘못된 방법은 아니지만 더 효율적으로 코드를 작성할 수 있는 방법이 있었고 아직은 많이 부족하다고 느꼈다.
# 좀 더 효율적인 구현을 추구해봅시다..!
